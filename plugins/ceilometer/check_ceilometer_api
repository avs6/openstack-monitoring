#!/usr/bin/python
#
# Ceilometer API monitoring script
#
# Copyright 2014 eNovance <licensing@enovance.com>
#
# Author: Emilien Macchi <emilien.macchi@enovance.com>
# Author: Sylvain Baubeau <sylvain.baubeau@enovance.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

from ceilometerclient.client import get_client
from ceilometerclient.exc import CommunicationError

import sys
import argparse
import time

STATE_OK = 0
STATE_WARNING = 1
STATE_CRITICAL = 2
STATE_UNKNOWN = 3

parser = argparse.ArgumentParser()

parser.add_argument('-a', '--auth_url', metavar='URL', type=str,
                    default='http://localhost:5000/v2.0',
                    help='Keystone URL')

parser.add_argument('-u', '--username', metavar='username', type=str,
                    default='username',
                    help='username to use for authentication')

parser.add_argument('-p', '--password', metavar='password', type=str,
                    default='password',
                    help='password to use for authentication')

parser.add_argument('-t', '--tenant', metavar='tenant', type=str,
                    default='admin',
                    help='tenant name to use for authentication')

parser.add_argument('-e', '--endpoint_url', metavar='endpoint_url', type=str,
                    dest='endpoint_url',
                    help='Override the catalog endpoint.')

parser.add_argument('-y', metavar='endpoint_type', type=str,
                    dest='endpoint_type', default="internalURL",
                    help='Endpoint type in the catalog request.')

parser.add_argument('-w', metavar='warning', type=int, default=15,
                    dest='warning', help='Warning response time.')

parser.add_argument('-c', metavar='critical', type=int, default=30,
                    dest='critical', help='Critical response time.')

args = parser.parse_args()

try:
    client = get_client('2',
                        os_username=args.username,
                        os_tenant_name=args.tenant,
                        os_password=args.password,
                        os_auth_url=args.auth_url,
                        os_endpoint_type=args.endpoint_type,
                        timeout=args.critical)
except Exception, e:
    print "Fail to authenticate to ceilometer API"
    sys.exit(STATE_CRITICAL)

try:
    start = time.time()
    meters = client.meters.list()
    end = time.time()
except CommunicationError, e:
    print "Timeout while querying Ceilometer API"
    sys.exit(STATE_CRITICAL)
except:
    print "Failed to fetch meters"
    sys.exit(STATE_CRITICAL)

if end - start > args.warning:
    print "Call took %d seconds" % int(end - start)
    sys.exit(STATE_WARNING)

sys.exit(STATE_OK)
